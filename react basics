rfce(comp shoertcut)
############branch############
make the copy and work on it and then pull request to check whether it is correct or not and the merge if it is correct then merge branch to main..
##component k andar sab kuch return m likhna h 
############################################WAYS of exporting:
1)export default function name(){return(.......)}
2)function name{return(....)} 
    export default name
3)export const name=()=>{(return.......)}
###const keyword in the arrow function
##########################################DEFAULT EXPORT AND IMPORT(keyword default)
when there is only one sharing(no need of same name)
export default name
import name(any) from './App.jsx'

###########################################NAMED EXPORT AND IMPORT(default{} curly braces)
export{name as different name} 
import{name } from "ih"
###########################################
simple use default when we want to use different name.
use {} if we want same name or multiple functions. and not default with the normal function.
##we can use different named components in main default component
##################################JSX:javascript XML (JS+HTML) can use javascript variables in jsx {} 
create variables and store the html
html in only return 
by functions and exporting we are basically creating the tags 
#################making tags############
<tag atrributes>content<tag close>
making###########function tag(component) name(support){return <> 
{support.children} from content within and 
{support.attribute(prop)} it can be called as variable can be use as a template in this tag </>}
can be a tag and template
#########################PROPTYPES################
Adding restrictions to the function 
// Add this AFTER your component definition
UserProfile.propTypes = {
  name: PropTypes.string.isRequired,      // Must be string, required
  age: PropTypes.number,                  // Must be number, optional
  email: PropTypes.string.isRequired,     // Must be string, required
  isVerified: PropTypes.bool              // Must be boolean, optional
oneOf([])
oneOfType([])
};
##########################hooks??
**************************useState 
javascript code rerun on each rerender and react does not know about the js variable therefore changes in it does not cause the re render
so useState: when there is value persistance and rerendering required.
one parameter:initial value
two return=value,function to change value 
**************************useRef******************************
when we want only value persistance.
const var=useRef(initial val) return obj that contain the atttribute .current
can directly change value of the variable can also store tag in this var <tag ref={var}/>
***************************useEffect :when we want to run the function with conditions
useEffect(callback function, and condition to run)
1)[]:run only one time after render
2)[var]:jab variabl change ho iske andar bhi hm return function likhskhte h 
3)nothing:just like normal function run after every render 
actually two world the react world and outside world if you write in dom after every render react handle this chnage only the thing what is neceesary 
but outside world you control that react actually wrinting this again and again so you have to mange if you go outside the react world all this problem that 
when state change rerendering occur that constant but react can control dom but not the outside world........
##############React Controls: ‚úÖ
Component rendering üñºÔ∏è
State updates üéØ
Virtual DOM changes ‚öõÔ∏è
Props passing üì¶
############################memo 
if we want js component to memorize the answer....
**************************UseMemo 
when we want to control js function memorize its ans ,stores in variable...
useMemo(funtion(),[]
*********************************createContext() and useContext ?????????????????????????????????
many child in the app.we will then do prop dilling.
 export const num=createContext() num.provider.value in the tag in which component present in the app and myname=useContext(num) in the child use myname in the child  
#############################################USE TAILWIND CSS##################
we can use built-in classes of tailwind by using className and every tag is a closing tag one tag is always closed like <tag/>
######################design pattern########
=>wrote a book with 23 common design pattern and group them into three
structural pattern (combine the objects and classes in smart way)
creational pattern (create objects in smart way 
behavioural pattern (solve the problem in a smart way)
repository design pattern:make separate object with functions  who is taking to the local storage or server just add object fucntion  in the app
it is js file only handle data 
API:like a waitor arrange meetings within two systems..
#################routing######################
multiple pages handling.
We will use React Router library.
                                         <BrowserRouter>
                                        or <HashRouter>
                                               <Routes>
                                                    <route path/>
                                                    <route path/>
                                                    <route path/>
                                                </Routes>
                                               <Link><Link> create navigational link in this  
                                               <NavLink><NavLink> link with some styling
#########################################################new one 
createBrowserRouter
RouterProvider
const router=createBrowserRouter(
[
{
path:"/",
element:<Home/>
},
{
path:"/about",
element:<about/>
}, 
{
path:"/dash",
element:<dash/>
children:[{
path:no /
},{},{}]
}
]for children add the outlet in the parent component before div end
now give this router to the app 
<RouterProvider router={router}/>

now we should attach that created url to the text by using <a/> but it will load whole page.
So,basically i need <Link to > or <NavLink to >
            iske andar hoga isActive (boolean) isko use krk styling krskte h 
#################################Pass parameters when creating the links or the routes
if variable then use with the :id like
useNavigate
const nav=useNavigate();
nav(path) is path pr move krjao 




